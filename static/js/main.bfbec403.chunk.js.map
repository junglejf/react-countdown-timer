{"version":3,"sources":["components/Countdown.jsx","components/YoutubeEmbed.jsx","acabou.mp4","images/surpresa.png","App.js","reportWebVitals.js","index.js"],"names":["Countdown","props","renderTime","remainingTime","className","handleTimeInput","e","target","value","setState","prevState","newValue","parseInt","time","totalTime","minute","second","setTime","min","sec","onClear","onStart","preventDefault","handleMode","ligado","myInterval","setInterval","onPause","clearInterval","timeOver","formatValue","n","console","log","state","this","maxlength","placeholder","type","max","onChange","step","onClick","React","Component","YoutubeEmbed","embedId","width","height","src","frameBorder","allow","allowFullScreen","title","App","status","acabou","playing","url","myVideo","controls","myImage","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfbec403.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nconst ON = 1;\nconst PAUSE = 2;\nconst ONtoOFF = 3;\nclass Countdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { time: { minute: 0, second: 0 } };\n  }\n  renderTime = ({ remainingTime }) => {\n    if (remainingTime === 0) {\n      return <div className=\"timer\">Too lale...</div>;\n    }\n  }\n  handleTimeInput = (e) => {\n    const { target: {value, className} }= e ;\n    this.setState((prevState) => {\n      let newValue = parseInt(value, 10) < 0 ? 0 : parseInt(value, 10);\n      if (className === 'second' && newValue > 59) newValue = 59;\n      if (className === 'minute' && newValue > 999) newValue = 999;\n      const newTime = {...prevState.time, ...{[className]: newValue}}\n      return ({time: newTime});\n    });\n  }\n\n  totalTime = ({ time: { minute, second } }) => {\n    return ( minute * 60 + second);\n  }\n  setTime = ({ time: { minute, second } }) => {\n    let min = minute;\n    let sec = second;\n    if(!sec && min) {\n      min -= 1;\n      sec = 60;\n    }\n    return(\n      (min || sec) ? {time:{minute: min, second: sec - 1}}\n      : this.onClear());\n  }\n  onStart = (e) => {\n    e.preventDefault();\n    const { handleMode, ligado } = this.props;\n    if(ligado !== ON){\n      handleMode(ON);\n      this.myInterval = setInterval(() => {\n          this.setState((prevState)=>({...prevState, ...this.setTime(prevState)}))\n        }, 1000)\n    }\n  }\n\n  onPause = (e) => {\n    e.preventDefault();\n    const { handleMode } = this.props;\n    handleMode(PAUSE);\n    clearInterval(this.myInterval);\n  }\n  \n  onClear = () => {\n    const { handleMode } = this.props;\n    handleMode(ONtoOFF);\n    clearInterval(this.myInterval);\n    this.setState({ time: {minute:0, second:0} });\n  }\n  \n  timeOver = () => (<label className='acabou'>ACABOU O TEMPO !!!</label>);\n\n  formatValue = (value) => {\n    const n = (value < 10 ? `0${value}` : value);\n    console.log(value);\n    return n;\n  };\n  render() {\n    const { time: { minute, second }} = this.state;\n    const { ligado } = this.props;\n    return(\n        <form className='clock'>\n          <div className='clockInput'>\n            <input className='minute' maxlength=\"4\" placeholder={ this.formatValue(minute) } type=\"number\" value={this.formatValue(minute)} min={\"0\"} max={\"9999\"} onChange = {this.handleTimeInput}></input>\n            <input className='second' maxlength=\"2\" placeholder={ this.formatValue(second) } type=\"number\" value={this.formatValue(second)} min={\"0\"} max={\"59\"}step={10} onChange ={this.handleTimeInput}></input>\n          </div>  \n          <div className='clockButtons'>\n            <button className='startBtn' type=\"reset\" onClick={this.onStart}></button>\n            <button className='stopBtn' type=\"reset\" onClick={this.onPause} ></button>\n            <button className='clearBtn' type=\"reset\" onClick={this.onClear} ></button>\n          </div>\n          {!minute && !second && ligado===ONtoOFF && this.timeOver()}\n        </form>\n    );\n  }\n}\n\nCountdown.propTypes = {\n  ligado: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]).isRequired,\n  handleMode: PropTypes.func.isRequired,\n};\n\n\nexport default Countdown;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass YoutubeEmbed extends React.Component {\n\n  render(){\n    const { embedId } = this.props;\n    return(\n    <div className=\"video-responsive\">\n      <iframe\n        width=\"1000\"\n        height=\"480\"\n        src={`https://www.youtube.com/embed/${embedId}`}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        title=\"Embedded youtube\"\n      />\n    </div>\n    );\n  }\n}\n\nYoutubeEmbed.propTypes = {\n  embedId: PropTypes.string.isRequired\n};\n\nexport default YoutubeEmbed;\n","export default __webpack_public_path__ + \"static/media/acabou.93314e4b.mp4\";","export default __webpack_public_path__ + \"static/media/surpresa.a6ca06e9.png\";","import React, { Component } from 'react';\n\nimport './App.css';\nimport Countdown from './components/Countdown';\nimport YoutubeEmbed from './components/YoutubeEmbed';\nimport myVideo from './acabou.mp4';\nimport myImage from './images/surpresa.png';\nimport ReactPlayer from 'react-player'\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ligado: 0,\n    }\n  }\n  handleMode = (status) => this.setState({ ligado: status });\n\n  acabou = () => (\n  <div className='acabou'>\n    <ReactPlayer playing url={ myVideo }\n                height='300px'\n                width='500px'\n                controls='true'\n            /> \n    <img src={ myImage } className='acabouImg' alt='acabou'/>\n  </div>\n  );\n\n  render() {\n    const { ligado } = this.state;\n    return (\n      <body className='main'>\n        <Countdown handleMode={ this.handleMode } ligado = { ligado }/>\n       {ligado === 1 && <YoutubeEmbed embedId=\"rNLHC406Y6s?autoplay=1\" ></YoutubeEmbed>}\n       {ligado === 3 &&  this.acabou()}\n\n      </body>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a funct\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}